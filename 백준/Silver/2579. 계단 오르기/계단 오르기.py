"""
1. 계단을 한 번에 1칸 또는 2칸씩 오를 수 있음
2. 연속된 세 개의 계단을 밟을 수 없음
3. 마지막 계단은 반드시 밟아야 함
4. 각 계단에는 점수가 있으며, 점수의 합이 최대가 되도록 해야함.

# dp 배열 정의
- dp[i]: i번째 계단까지 왔을 때 얻을 수 있는 최대 점수

# 점화식
1. 두칸 전에서 현재 계단으로 오는 경우
    - dp[i-1] + stair[i]
2. 한 칸 전에서 현재 계단으로 오르는 경우
(단, 연속 세 계단을 밟으면 안 되므로 i-1은 i-2와 연속되어 있으면 안됨)
    - 
"""
n = int(input())

stair = [0] + [int(input()) for _ in range(n)]
dp = [0] * (n+1)
dp[1] = stair[1]

for i in range(1,n+1):
    if n > 1:
        dp[i] = max(dp[i-2] + stair[i], dp[i - 3] + stair[i - 1] + stair[i])
        
print(dp[n])
    
